//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class gcloud_voice_IGCloudVoiceWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(gcloud_voice.IGCloudVoice), typeof(System.Object));
		L.RegFunction("SetAppInfo", SetAppInfo);
		L.RegFunction("SetServerInfo", SetServerInfo);
		L.RegFunction("Init", Init);
		L.RegFunction("SetMode", SetMode);
		L.RegFunction("Poll", Poll);
		L.RegFunction("Pause", Pause);
		L.RegFunction("Resume", Resume);
		L.RegFunction("JoinTeamRoom", JoinTeamRoom);
		L.RegFunction("JoinNationalRoom", JoinNationalRoom);
		L.RegFunction("JoinFMRoom", JoinFMRoom);
		L.RegFunction("QuitRoom", QuitRoom);
		L.RegFunction("OpenMic", OpenMic);
		L.RegFunction("CloseMic", CloseMic);
		L.RegFunction("OpenSpeaker", OpenSpeaker);
		L.RegFunction("CloseSpeaker", CloseSpeaker);
		L.RegFunction("ApplyMessageKey", ApplyMessageKey);
		L.RegFunction("SetMaxMessageLength", SetMaxMessageLength);
		L.RegFunction("StartRecording", StartRecording);
		L.RegFunction("StopRecording", StopRecording);
		L.RegFunction("UploadRecordedFile", UploadRecordedFile);
		L.RegFunction("DownloadRecordedFile", DownloadRecordedFile);
		L.RegFunction("PlayRecordedFile", PlayRecordedFile);
		L.RegFunction("StopPlayFile", StopPlayFile);
		L.RegFunction("SpeechToText", SpeechToText);
		L.RegFunction("ForbidMemberVoice", ForbidMemberVoice);
		L.RegFunction("EnableLog", EnableLog);
		L.RegFunction("GetMicLevel", GetMicLevel);
		L.RegFunction("GetSpeakerLevel", GetSpeakerLevel);
		L.RegFunction("SetSpeakerVolume", SetSpeakerVolume);
		L.RegFunction("TestMic", TestMic);
		L.RegFunction("GetFileParam", GetFileParam);
		L.RegFunction("invoke", invoke);
		L.RegFunction("EnableSpeakerOn", EnableSpeakerOn);
		L.RegFunction("SetMicVolume", SetMicVolume);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("OnJoinRoomComplete", get_OnJoinRoomComplete, set_OnJoinRoomComplete);
		L.RegVar("OnQuitRoomComplete", get_OnQuitRoomComplete, set_OnQuitRoomComplete);
		L.RegVar("OnMemberVoice", get_OnMemberVoice, set_OnMemberVoice);
		L.RegVar("OnApplyMessageKeyComplete", get_OnApplyMessageKeyComplete, set_OnApplyMessageKeyComplete);
		L.RegVar("OnUploadReccordFileComplete", get_OnUploadReccordFileComplete, set_OnUploadReccordFileComplete);
		L.RegVar("OnDownloadRecordFileComplete", get_OnDownloadRecordFileComplete, set_OnDownloadRecordFileComplete);
		L.RegVar("OnPlayRecordFilComplete", get_OnPlayRecordFilComplete, set_OnPlayRecordFilComplete);
		L.RegVar("OnSpeechToText", get_OnSpeechToText, set_OnSpeechToText);
		L.RegVar("OnStreamSpeechToText", get_OnStreamSpeechToText, set_OnStreamSpeechToText);
		L.RegVar("OnStatusUpdate", get_OnStatusUpdate, set_OnStatusUpdate);
		L.RegFunction("StatusUpdateHandler", gcloud_voice_IGCloudVoice_StatusUpdateHandler);
		L.RegFunction("StreamSpeechToTextHandler", gcloud_voice_IGCloudVoice_StreamSpeechToTextHandler);
		L.RegFunction("SpeechToTextHandler", gcloud_voice_IGCloudVoice_SpeechToTextHandler);
		L.RegFunction("PlayRecordFilCompleteHandler", gcloud_voice_IGCloudVoice_PlayRecordFilCompleteHandler);
		L.RegFunction("DownloadRecordFileCompleteHandler", gcloud_voice_IGCloudVoice_DownloadRecordFileCompleteHandler);
		L.RegFunction("UploadReccordFileCompleteHandler", gcloud_voice_IGCloudVoice_UploadReccordFileCompleteHandler);
		L.RegFunction("ApplyMessageKeyCompleteHandler", gcloud_voice_IGCloudVoice_ApplyMessageKeyCompleteHandler);
		L.RegFunction("MemberVoiceHandler", gcloud_voice_IGCloudVoice_MemberVoiceHandler);
		L.RegFunction("QuitRoomCompleteHandler", gcloud_voice_IGCloudVoice_QuitRoomCompleteHandler);
		L.RegFunction("JoinRoomCompleteHandler", gcloud_voice_IGCloudVoice_JoinRoomCompleteHandler);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAppInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			int o = obj.SetAppInfo(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetServerInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.SetServerInfo(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.Init();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			gcloud_voice.GCloudVoiceMode arg0 = (gcloud_voice.GCloudVoiceMode)ToLua.CheckObject(L, 2, typeof(gcloud_voice.GCloudVoiceMode));
			int o = obj.SetMode(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Poll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.Poll();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.Pause();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Resume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.Resume();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int JoinTeamRoom(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(string), typeof(int)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int o = obj.JoinTeamRoom(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(string), typeof(string), typeof(int), typeof(int)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				int o = obj.JoinTeamRoom(arg0, arg1, arg2, arg3);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: gcloud_voice.IGCloudVoice.JoinTeamRoom");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int JoinNationalRoom(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(string), typeof(gcloud_voice.GCloudVoiceRole), typeof(int)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				gcloud_voice.GCloudVoiceRole arg1 = (gcloud_voice.GCloudVoiceRole)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int o = obj.JoinNationalRoom(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(string), typeof(string), typeof(int), typeof(gcloud_voice.GCloudVoiceRole), typeof(int)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				gcloud_voice.GCloudVoiceRole arg3 = (gcloud_voice.GCloudVoiceRole)ToLua.ToObject(L, 5);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 6);
				int o = obj.JoinNationalRoom(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: gcloud_voice.IGCloudVoice.JoinNationalRoom");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int JoinFMRoom(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.JoinFMRoom(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int QuitRoom(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.QuitRoom(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenMic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.OpenMic();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseMic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.CloseMic();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenSpeaker(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.OpenSpeaker();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseSpeaker(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.CloseSpeaker();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ApplyMessageKey(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(int)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				int o = obj.ApplyMessageKey(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(string), typeof(int), typeof(int)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int o = obj.ApplyMessageKey(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: gcloud_voice.IGCloudVoice.ApplyMessageKey");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMaxMessageLength(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.SetMaxMessageLength(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartRecording(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.StartRecording(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopRecording(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.StopRecording();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UploadRecordedFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.UploadRecordedFile(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DownloadRecordedFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int o = obj.DownloadRecordedFile(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayRecordedFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.PlayRecordedFile(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopPlayFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.StopPlayFile();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SpeechToText(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(string), typeof(int), typeof(int)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int o = obj.SpeechToText(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(string), typeof(string), typeof(int), typeof(int), typeof(int)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				int arg2 = (int)LuaDLL.lua_tonumber(L, 4);
				int arg3 = (int)LuaDLL.lua_tonumber(L, 5);
				int arg4 = (int)LuaDLL.lua_tonumber(L, 6);
				int o = obj.SpeechToText(arg0, arg1, arg2, arg3, arg4);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: gcloud_voice.IGCloudVoice.SpeechToText");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ForbidMemberVoice(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			int o = obj.ForbidMemberVoice(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableLog(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			int o = obj.EnableLog(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetMicLevel(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				int o = obj.GetMicLevel();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(gcloud_voice.IGCloudVoice), typeof(bool)))
			{
				gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.ToObject(L, 1);
				bool arg0 = LuaDLL.lua_toboolean(L, 2);
				int o = obj.GetMicLevel(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: gcloud_voice.IGCloudVoice.GetMicLevel");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSpeakerLevel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.GetSpeakerLevel();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSpeakerVolume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.SetSpeakerVolume(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TestMic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int o = obj.TestMic();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFileParam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			string arg0 = ToLua.CheckString(L, 2);
			int[] arg1 = ToLua.CheckNumberArray<int>(L, 3);
			float[] arg2 = ToLua.CheckNumberArray<float>(L, 4);
			int o = obj.GetFileParam(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int invoke(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			uint arg2 = (uint)LuaDLL.luaL_checknumber(L, 4);
			uint[] arg3 = ToLua.CheckNumberArray<uint>(L, 5);
			int o = obj.invoke(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnableSpeakerOn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			int o = obj.EnableSpeakerOn(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMicVolume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.SetMicVolume(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnJoinRoomComplete(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnJoinRoomComplete"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnQuitRoomComplete(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnQuitRoomComplete"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnMemberVoice(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnMemberVoice"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnApplyMessageKeyComplete(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnApplyMessageKeyComplete"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnUploadReccordFileComplete(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnUploadReccordFileComplete"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnDownloadRecordFileComplete(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnDownloadRecordFileComplete"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnPlayRecordFilComplete(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnPlayRecordFilComplete"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnSpeechToText(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnSpeechToText"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnStreamSpeechToText(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnStreamSpeechToText"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnStatusUpdate(IntPtr L)
	{
		ToLua.Push(L, new EventObject("gcloud_voice.IGCloudVoice.OnStatusUpdate"));
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnJoinRoomComplete(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnJoinRoomComplete' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.JoinRoomCompleteHandler ev = (gcloud_voice.IGCloudVoice.JoinRoomCompleteHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.JoinRoomCompleteHandler), arg0.func);
				obj.OnJoinRoomComplete += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.JoinRoomCompleteHandler ev = (gcloud_voice.IGCloudVoice.JoinRoomCompleteHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnJoinRoomComplete");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.JoinRoomCompleteHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnJoinRoomComplete -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnQuitRoomComplete(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnQuitRoomComplete' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.QuitRoomCompleteHandler ev = (gcloud_voice.IGCloudVoice.QuitRoomCompleteHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.QuitRoomCompleteHandler), arg0.func);
				obj.OnQuitRoomComplete += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.QuitRoomCompleteHandler ev = (gcloud_voice.IGCloudVoice.QuitRoomCompleteHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnQuitRoomComplete");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.QuitRoomCompleteHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnQuitRoomComplete -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnMemberVoice(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnMemberVoice' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.MemberVoiceHandler ev = (gcloud_voice.IGCloudVoice.MemberVoiceHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.MemberVoiceHandler), arg0.func);
				obj.OnMemberVoice += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.MemberVoiceHandler ev = (gcloud_voice.IGCloudVoice.MemberVoiceHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnMemberVoice");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.MemberVoiceHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnMemberVoice -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnApplyMessageKeyComplete(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnApplyMessageKeyComplete' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.ApplyMessageKeyCompleteHandler ev = (gcloud_voice.IGCloudVoice.ApplyMessageKeyCompleteHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.ApplyMessageKeyCompleteHandler), arg0.func);
				obj.OnApplyMessageKeyComplete += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.ApplyMessageKeyCompleteHandler ev = (gcloud_voice.IGCloudVoice.ApplyMessageKeyCompleteHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnApplyMessageKeyComplete");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.ApplyMessageKeyCompleteHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnApplyMessageKeyComplete -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnUploadReccordFileComplete(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnUploadReccordFileComplete' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.UploadReccordFileCompleteHandler ev = (gcloud_voice.IGCloudVoice.UploadReccordFileCompleteHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.UploadReccordFileCompleteHandler), arg0.func);
				obj.OnUploadReccordFileComplete += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.UploadReccordFileCompleteHandler ev = (gcloud_voice.IGCloudVoice.UploadReccordFileCompleteHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnUploadReccordFileComplete");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.UploadReccordFileCompleteHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnUploadReccordFileComplete -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnDownloadRecordFileComplete(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnDownloadRecordFileComplete' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.DownloadRecordFileCompleteHandler ev = (gcloud_voice.IGCloudVoice.DownloadRecordFileCompleteHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.DownloadRecordFileCompleteHandler), arg0.func);
				obj.OnDownloadRecordFileComplete += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.DownloadRecordFileCompleteHandler ev = (gcloud_voice.IGCloudVoice.DownloadRecordFileCompleteHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnDownloadRecordFileComplete");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.DownloadRecordFileCompleteHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnDownloadRecordFileComplete -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnPlayRecordFilComplete(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnPlayRecordFilComplete' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.PlayRecordFilCompleteHandler ev = (gcloud_voice.IGCloudVoice.PlayRecordFilCompleteHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.PlayRecordFilCompleteHandler), arg0.func);
				obj.OnPlayRecordFilComplete += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.PlayRecordFilCompleteHandler ev = (gcloud_voice.IGCloudVoice.PlayRecordFilCompleteHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnPlayRecordFilComplete");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.PlayRecordFilCompleteHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnPlayRecordFilComplete -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnSpeechToText(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnSpeechToText' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.SpeechToTextHandler ev = (gcloud_voice.IGCloudVoice.SpeechToTextHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.SpeechToTextHandler), arg0.func);
				obj.OnSpeechToText += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.SpeechToTextHandler ev = (gcloud_voice.IGCloudVoice.SpeechToTextHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnSpeechToText");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.SpeechToTextHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnSpeechToText -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnStreamSpeechToText(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnStreamSpeechToText' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.StreamSpeechToTextHandler ev = (gcloud_voice.IGCloudVoice.StreamSpeechToTextHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.StreamSpeechToTextHandler), arg0.func);
				obj.OnStreamSpeechToText += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.StreamSpeechToTextHandler ev = (gcloud_voice.IGCloudVoice.StreamSpeechToTextHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnStreamSpeechToText");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.StreamSpeechToTextHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnStreamSpeechToText -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnStatusUpdate(IntPtr L)
	{
		try
		{
			gcloud_voice.IGCloudVoice obj = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 1, typeof(gcloud_voice.IGCloudVoice));
			EventObject arg0 = null;

			if (LuaDLL.lua_isuserdata(L, 2) != 0)
			{
				arg0 = (EventObject)ToLua.ToObject(L, 2);
			}
			else
			{
				return LuaDLL.luaL_throw(L, "The event 'gcloud_voice.IGCloudVoice.OnStatusUpdate' can only appear on the left hand side of += or -= when used outside of the type 'gcloud_voice.IGCloudVoice'");
			}

			if (arg0.op == EventOp.Add)
			{
				gcloud_voice.IGCloudVoice.StatusUpdateHandler ev = (gcloud_voice.IGCloudVoice.StatusUpdateHandler)DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.StatusUpdateHandler), arg0.func);
				obj.OnStatusUpdate += ev;
			}
			else if (arg0.op == EventOp.Sub)
			{
				gcloud_voice.IGCloudVoice.StatusUpdateHandler ev = (gcloud_voice.IGCloudVoice.StatusUpdateHandler)LuaMisc.GetEventHandler(obj, typeof(gcloud_voice.IGCloudVoice), "OnStatusUpdate");
				Delegate[] ds = ev.GetInvocationList();
				LuaState state = LuaState.Get(L);

				for (int i = 0; i < ds.Length; i++)
				{
					ev = (gcloud_voice.IGCloudVoice.StatusUpdateHandler)ds[i];
					LuaDelegate ld = ev.Target as LuaDelegate;

					if (ld != null && ld.func == arg0.func)
					{
						obj.OnStatusUpdate -= ev;
						state.DelayDispose(ld.func);
						break;
					}
				}

				arg0.func.Dispose();
			}

			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_StatusUpdateHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.StatusUpdateHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_StreamSpeechToTextHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.StreamSpeechToTextHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_SpeechToTextHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.SpeechToTextHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_PlayRecordFilCompleteHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.PlayRecordFilCompleteHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_DownloadRecordFileCompleteHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.DownloadRecordFileCompleteHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_UploadReccordFileCompleteHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.UploadReccordFileCompleteHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_ApplyMessageKeyCompleteHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.ApplyMessageKeyCompleteHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_MemberVoiceHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.MemberVoiceHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_QuitRoomCompleteHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.QuitRoomCompleteHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gcloud_voice_IGCloudVoice_JoinRoomCompleteHandler(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(gcloud_voice.IGCloudVoice.JoinRoomCompleteHandler), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

