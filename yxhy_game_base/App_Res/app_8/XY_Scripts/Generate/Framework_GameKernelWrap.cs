//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Framework_GameKernelWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Framework.GameKernel), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("StartMonoCoroutine", StartMonoCoroutine);
		L.RegFunction("StopMonoCoroutine", StopMonoCoroutine);
		L.RegFunction("ShowUpdateUI", ShowUpdateUI);
		L.RegFunction("CreateForVisionUpdate", CreateForVisionUpdate);
		L.RegFunction("CreateForInitData", CreateForInitData);
		L.RegFunction("Create", Create);
		L.RegFunction("Begin", Begin);
		L.RegFunction("Shutdown", Shutdown);
		L.RegFunction("GetDataCenter", GetDataCenter);
		L.RegFunction("GetResourceMgr", GetResourceMgr);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartMonoCoroutine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Collections.IEnumerator arg0 = (System.Collections.IEnumerator)ToLua.CheckObject(L, 1, typeof(System.Collections.IEnumerator));
			UnityEngine.Coroutine o = Framework.GameKernel.StartMonoCoroutine(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopMonoCoroutine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Coroutine arg0 = (UnityEngine.Coroutine)ToLua.CheckObject(L, 1, typeof(UnityEngine.Coroutine));
			Framework.GameKernel.StopMonoCoroutine(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowUpdateUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Framework.GameKernel.ShowUpdateUI();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateForVisionUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Framework.GameKernel.CreateForVisionUpdate();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateForInitData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Framework.GameKernel.CreateForInitData();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Framework.GameKernel.Create();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Begin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Framework.GameKernel.Begin();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Shutdown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Framework.GameKernel.Shutdown();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDataCenter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			NS_DataCenter.DataCenter o = Framework.GameKernel.GetDataCenter();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResourceMgr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			XYHY.ResourceMgr o = Framework.GameKernel.GetResourceMgr();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}
}

