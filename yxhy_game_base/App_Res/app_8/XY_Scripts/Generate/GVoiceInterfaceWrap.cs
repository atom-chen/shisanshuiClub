//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GVoiceInterfaceWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GVoiceInterface), typeof(Singleton<GVoiceInterface>));
		L.RegFunction("SetDelegateMessageKey", SetDelegateMessageKey);
		L.RegFunction("SetDelegateUploadReccord", SetDelegateUploadReccord);
		L.RegFunction("SetDelegateDownloadReccord", SetDelegateDownloadReccord);
		L.RegFunction("SetDelegatePlayReccord", SetDelegatePlayReccord);
		L.RegFunction("GetVoiceEngine", GetVoiceEngine);
		L.RegFunction("SetAppInfo", SetAppInfo);
		L.RegFunction("Init", Init);
		L.RegFunction("SetMode", SetMode);
		L.RegFunction("Poll", Poll);
		L.RegFunction("OnApplicationPause", OnApplicationPause);
		L.RegFunction("OnApplicationResume", OnApplicationResume);
		L.RegFunction("ApplyMessageKey", ApplyMessageKey);
		L.RegFunction("SetMaxMessageLength", SetMaxMessageLength);
		L.RegFunction("StartRecording", StartRecording);
		L.RegFunction("StopRecording", StopRecording);
		L.RegFunction("UploadRecordedFile", UploadRecordedFile);
		L.RegFunction("DownloadRecordedFile", DownloadRecordedFile);
		L.RegFunction("StopPlayFile", StopPlayFile);
		L.RegFunction("PlayRecordedFile", PlayRecordedFile);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("m_voiceengine", get_m_voiceengine, set_m_voiceengine);
		L.RegFunction("DelegateMessageKey", GVoiceInterface_DelegateMessageKey);
		L.RegFunction("DelegateUploadReccord", GVoiceInterface_DelegateUploadReccord);
		L.RegFunction("DelegateDownloadReccord", GVoiceInterface_DelegateDownloadReccord);
		L.RegFunction("DelegatePlayReccord", GVoiceInterface_DelegatePlayReccord);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDelegateMessageKey(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			GVoiceInterface.DelegateMessageKey arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GVoiceInterface.DelegateMessageKey)ToLua.CheckObject(L, 2, typeof(GVoiceInterface.DelegateMessageKey));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GVoiceInterface.DelegateMessageKey), func) as GVoiceInterface.DelegateMessageKey;
			}

			obj.SetDelegateMessageKey(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDelegateUploadReccord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			GVoiceInterface.DelegateUploadReccord arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GVoiceInterface.DelegateUploadReccord)ToLua.CheckObject(L, 2, typeof(GVoiceInterface.DelegateUploadReccord));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GVoiceInterface.DelegateUploadReccord), func) as GVoiceInterface.DelegateUploadReccord;
			}

			obj.SetDelegateUploadReccord(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDelegateDownloadReccord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			GVoiceInterface.DelegateDownloadReccord arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GVoiceInterface.DelegateDownloadReccord)ToLua.CheckObject(L, 2, typeof(GVoiceInterface.DelegateDownloadReccord));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GVoiceInterface.DelegateDownloadReccord), func) as GVoiceInterface.DelegateDownloadReccord;
			}

			obj.SetDelegateDownloadReccord(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDelegatePlayReccord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			GVoiceInterface.DelegatePlayReccord arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (GVoiceInterface.DelegatePlayReccord)ToLua.CheckObject(L, 2, typeof(GVoiceInterface.DelegatePlayReccord));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(GVoiceInterface.DelegatePlayReccord), func) as GVoiceInterface.DelegatePlayReccord;
			}

			obj.SetDelegatePlayReccord(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVoiceEngine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			gcloud_voice.IGCloudVoice o = obj.GetVoiceEngine();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAppInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			int o = obj.SetAppInfo(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			int o = obj.Init();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			gcloud_voice.GCloudVoiceMode arg0 = (gcloud_voice.GCloudVoiceMode)ToLua.CheckObject(L, 2, typeof(gcloud_voice.GCloudVoiceMode));
			int o = obj.SetMode(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Poll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			int o = obj.Poll();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnApplicationPause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.OnApplicationPause(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnApplicationResume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.OnApplicationResume(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ApplyMessageKey(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.ApplyMessageKey(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMaxMessageLength(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int o = obj.SetMaxMessageLength(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartRecording(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.StartRecording(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopRecording(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			int o = obj.StopRecording();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UploadRecordedFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int o = obj.UploadRecordedFile(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DownloadRecordedFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			int o = obj.DownloadRecordedFile(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopPlayFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			int o = obj.StopPlayFile();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayRecordedFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceInterface obj = (GVoiceInterface)ToLua.CheckObject(L, 1, typeof(GVoiceInterface));
			string arg0 = ToLua.CheckString(L, 2);
			int o = obj.PlayRecordedFile(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_voiceengine(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GVoiceInterface obj = (GVoiceInterface)o;
			gcloud_voice.IGCloudVoice ret = obj.m_voiceengine;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_voiceengine on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_voiceengine(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GVoiceInterface obj = (GVoiceInterface)o;
			gcloud_voice.IGCloudVoice arg0 = (gcloud_voice.IGCloudVoice)ToLua.CheckObject(L, 2, typeof(gcloud_voice.IGCloudVoice));
			obj.m_voiceengine = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_voiceengine on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GVoiceInterface_DelegateMessageKey(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GVoiceInterface.DelegateMessageKey), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GVoiceInterface_DelegateUploadReccord(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GVoiceInterface.DelegateUploadReccord), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GVoiceInterface_DelegateDownloadReccord(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GVoiceInterface.DelegateDownloadReccord), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GVoiceInterface_DelegatePlayReccord(IntPtr L)
	{
		try
		{
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);
			Delegate arg1 = DelegateFactory.CreateDelegate(typeof(GVoiceInterface.DelegatePlayReccord), func);
			ToLua.Push(L, arg1);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

