local base = require "logic/mahjong_sys/game_15/ui_action/mahjong_action_small_reward_15"
local mahjong_action_small_reward_88 = class("mahjong_action_small_reward_88", base)
local reward_ui_path = "logic.mahjong_sys.ui_mahjong.window.mahjong_small_reward_ui"

local data_class = require "logic/mahjong_sys/data/mahjong_data_class/mahjong_small_reward_data"
local player_data_class = require "logic/mahjong_sys/data/mahjong_data_class/mahjong_small_reward_player_data"

local lib_hupai_score = require "logic/mahjong_sys/common/lib/lib_hupai_score"
local lib_gang_score = require "logic/mahjong_sys/common/lib/lib_gang_score"
local lib_common = require "logic/mahjong_sys/common/lib/lib_common"
local lib_common_c = nil


function mahjong_action_small_reward_88:Execute(tbl)	
	Trace("tbl------------------------------"..GetTblData(tbl))
	self:CleanUp()

	local para = tbl._para
	local banker = para.banker
	local curr_ju = para.curr_ju
	local ju_num = para.ju_num
	local dice = para.dice
	local rewards = para.rewards --包含4个玩家信息的table
	local who_winlst = para.who_win
	local win_type = para.win_type
	local rid = para.rid
	local bGangAddNoWin = para.bGangAddNoWin   -- 是否计算杠分
	local isHadHangFen = false	
	
	local zhamaCardLst = para.zhama_card

	lib_common_c = lib_common:create(self.mode)
 	local data = data_class:create()
 	--data = self:GetTitleInfo(data, win_type, win_viewSeat)
	data.playersInfo ={}	
 	for i=1, roomdata_center.MaxPlayer() do
 		local viewSeat = self.gvblnFun(i)
 		local playerInfo = player_data_class:create()
	    if win_type == "huangpai" then
	        playerInfo.isHuang=true
	    else
	        playerInfo.isHuang=false
	    end 		
 		data.playersInfo[viewSeat] = self:GetPlayerInfo(playerInfo, rewards, i, banker, win_type, who_winlst, bGangAddNoWin)
 	end 	
 
 	local winSeatInfo = {}
	if who_winlst ~= nil then
		for j,k in ipairs(who_winlst) do
		 	local fanInfo = rewards[k].win_info
		 	if fanInfo and #fanInfo > 0 then
		 		local fanInfoTbl = {}
		 		fanInfoTbl.byFanType = 0 
		 		fanInfoTbl.byFanNumber = 0
			 	for i,v in ipairs(fanInfo) do
			 		if v.byFanType > fanInfoTbl.byFanType then
			 			if v.byFanNumber > fanInfoTbl.byFanNumber then
			 				fanInfoTbl.byFanNumber = v.byFanNumber
			 				fanInfoTbl.byFanType = v.byFanType
			 			end
			 		end
			 	end
			 	fanInfoTbl.index = k
			 	table.insert(winSeatInfo, fanInfoTbl)			 	
			end
		end	
	end

	--先展示扎码 2s处理
	coroutine.start(function ()
		--self:ShowZhaMaUI()
		require "logic/mahjong_sys/ui_mahjong/mahjong_zhama_ui"
		--扎码的时候没有一炮多响
		local winViewSeat = self.gvblnFun(who_winlst[1])
		mahjong_zhama_ui.Show(winViewSeat, zhamaCardLst, mahjong_ui.transform)

		coroutine.wait(2)
	 	self:PlayAnimationAndShowUI(data, win_type, winSeatInfo, function(_data)
	 		mahjong_zhama_ui.Hide()
			mahjong_small_reward_ui.Show(_data)
	 	end)
	end)
end

function mahjong_action_small_reward_88:GetPaoInfo(rewards, i)
	local paoInfo = nil
 	if lib_common_c:GetSupportXiaPao() and rewards[i].xiapao and rewards[i].xiapao >= 0 then
 		paoInfo = "x"..rewards[i].xiapao
 	end
 	return paoInfo
end

function mahjong_action_small_reward_88:GetScoreItem(rewards, win_type, who_winlst, i, banker, bGangAddNoWin)
	local scoreItem = {}

	local base = 1
	
	local isHadHangFen = false
	lib_common_c = lib_common:create(self.mode)

	local lib_hupai_score_c = lib_hupai_score:create(self.mode)
	if win_type == "huangpai" then
		ui_sound_mgr.PlaySoundClip(mahjong_path_mgr.GetMjCommonSoundPath("audio_liuju"))  
		local item_huang = lib_hupai_score_c:GetHuangpaiScore(bGangAddNoWin)		
		if item_huang ~= nil then
			table.insert(scoreItem, item_huang)  
		end		
		isHadGangFen = lib_common_c:GetGangAddNoWin(bGangAddNoWin)
	else	
		isHadGangFen = true	
		ui_sound_mgr.PlaySoundClip(mahjong_path_mgr.GetMjCommonSoundPath("audio_win")) 
	 	-----------------------------------------------------------------------------------------------------------------	 


	 	-----------------------------------翻倍结算--------------------------------------------	 
	 	local exbei_type = self.config.beishu_type.exbei_type
	 	local hubei_type = self.config.beishu_type.hubei_type
	 	for n,o in ipairs(who_winlst) do
		 	local beishu, beiTbl = lib_common_c:GetFanInfo(rewards[o].win_info.nFanDetailInfo, "", "倍", exbei_type, hubei_type)
		 	local item_hu = lib_hupai_score_c:GetHuPaiScore(rewards, o, win_type, i, base)
		 	if item_hu ~= nil then
		 		table.insert(scoreItem, item_hu)
		 	end

		 	--兼容老的， 新的总倍数无需自己计算。
		 	--beishu = rewards[o].win_info.nFanNum
		 	if beishu > 1 and item_hu ~= nil then
		 		item_hu.num = tostring(beishu).."倍"
			 	for i,v in ipairs(beiTbl) do
					table.insert(scoreItem, v)
			 	end		 		
		 	end		 		 	 		 	
	 	end	
 	end

 	------------------------------------------杠分结算-----------------------------------------------
 	local lib_gang_score_c = lib_gang_score:create(self.mode)
 	local gangScoreTbl = lib_gang_score_c:GetGangScore(isHadGangFen, rewards, i, base) 		
 	for i,v in ipairs(gangScoreTbl) do
 		table.insert(scoreItem, v)
 	end		

 	return scoreItem
end

return mahjong_action_small_reward_88
