local before_starting_operation_view = class("before_starting_operation_view")

function before_starting_operation_view:ctor(gameObject,controlObj)
	self.gameObject = gameObject
	self.transform = self.gameObject.transform
	self.controlObj = controlObj
	self.timeleftlbl = nil
	self.btn_ready = nil
	self.btn_dismiss = nil
	self.btn_copy = nil
	self.btn_invite = nil
	self.grid = nil
	self.gridOpenCard = nil
	self.btn_Cuopai = nil
	self.btn_Opencard = nil
	self.is_RubCard = nil --是否搓牌
	self:InitView()
end

function before_starting_operation_view:InitView()
	self.timeleftlbl = componentGet(child(self.transform,"timeleftlbl"), "UILabel")
	self.grid = componentGet(child(self.transform,"Grid"), "UIGrid")
	self.gridOpenCard = componentGet(child(self.transform,"GridOpenCard"), "UIGrid")
	self.btn_ready = child(self.transform,"btn_ready")
	if self.btn_ready ~= nil then
		addClickCallbackSelf(self.btn_ready.gameObject,self.controlObj.Onbtn_readyClick,self.controlObj)
		self.btn_ready.gameObject:SetActive(false)
	end
	self.btn_dismiss = child(self.transform,"Grid/btn_Dismiss")
	if self.btn_dismiss ~= nil then
		addClickCallbackSelf(self.btn_dismiss.gameObject,self.controlObj.Onbtn_dimissRoom,self.controlObj)
		self.btn_dismiss.gameObject:SetActive(true)
	end
	self.btn_copy = child(self.transform,"Grid/btn_Copy")
	if self.btn_copy ~= nil then
		addClickCallbackSelf(self.btn_copy.gameObject,self.controlObj.Onbtn_CopyRoomNum,self.controlObj)
		self.btn_copy.gameObject:SetActive(false)
	end
	
	self.btn_invite = child(self.transform,"Grid/btn_Invite")
	if self.btn_invite ~= nil then
		addClickCallbackSelf(self.btn_invite.gameObject,self.controlObj.Onbtn_inviteFriend,self.controlObj)
		self.btn_invite.gameObject:SetActive(true)
	end
	
	self.btn_Cuopai = child(self.transform,"GridOpenCard/btn_Cuopai")
	if self.btn_Cuopai ~= nil then
		addClickCallbackSelf(self.btn_Cuopai.gameObject,self.controlObj.OnBtnCuoPaiOnClick,self.controlObj)
		self.btn_Cuopai.gameObject:SetActive(false)
	end  
	
	self.btn_Opencard = child(self.transform,"GridOpenCard/btn_Opencard")
	if self.btn_Opencard ~= nil then
		addClickCallbackSelf(self.btn_Opencard.gameObject,self.controlObj.onbtn_openCardClick,self.controlObj)
		self.btn_Opencard.gameObject:SetActive(false)
	end

	--苹果审核隐藏界面
	if G_isAppleVerifyInvite then
		local btn_Invite=self.btn_invite
		if btn_Invite then
			btn_Invite.gameObject:SetActive(false)
		end
		self.btn_invite = nil
	end
end

function before_starting_operation_view:ShowInviteBtn(isShow)
	if self.btn_invite then
		self.btn_invite.gameObject:SetActive(isShow or false)
	end
	self.btn_copy.gameObject:SetActive(isShow or false)
	self.grid:Reposition()
end

function before_starting_operation_view:ShowReadyBtn()
	self.btn_ready.gameObject:SetActive(true)
	self.grid:Reposition()
end

function before_starting_operation_view:HideReadyBtn()
	self.btn_ready.gameObject:SetActive(false)
	self.grid:Reposition()
end

function before_starting_operation_view:SetCopyRnoVisible(isShow)
	if self.btn_copy then
		self.btn_copy.gameObject:SetActive(isShow or false)
	end
	self.grid:Reposition()
end

function before_starting_operation_view:ShowDissolveRoom(isShow)
	self.btn_dismiss.gameObject:SetActive(isShow)
	self.grid:Reposition()
end

function  before_starting_operation_view:IsShowOpenCardBtn(IsShow,CardType)
	if self.btn_Opencard == nil then return end
	self.btn_Opencard.gameObject:SetActive(IsShow)
	if CardType ~= nil then
--		self.widgetTbl.btn_openCardLabel.text = niuniu_rule_define.PT_BULL_Text[CardType]
	end
	self.gridOpenCard:Reposition()
end

function  before_starting_operation_view:IsShowCuoPaiBtn(IsShow)
	if self.btn_Cuopai == nil then return end
--	local cuopaiSetting = require("logic.niuniu_sys.cmd_manage.niuniu_data_manage"):GetInstance().roomInfo.GameSetting.rubCard
	if not self.is_RubCard or self.is_RubCard == 0 then
		self.btn_Cuopai.gameObject:SetActive(false)
		return
	end
	self.btn_Cuopai.gameObject:SetActive(IsShow)
	
	self.gridOpenCard:Reposition()
end

return before_starting_operation_view