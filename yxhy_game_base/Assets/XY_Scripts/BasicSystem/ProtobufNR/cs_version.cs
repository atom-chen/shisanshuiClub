// Classes and structures being serialized

// Generated by ProtocolBuffer
// - a pure c# code generation implementation of protocol buffers
// Report bugs to: https://silentorbit.com/protobuf/

// DO NOT EDIT
// This file will be overwritten when CodeGenerator is run.
// To make custom modifications, edit the .proto file and add //:external before the message line
// then write the code and the changes in a separate file.
using System;
using System.Collections.Generic;

namespace cs
{
    /// <summary>请求最新版本号 CS_QUERY_LATEST_VERSION_REQ = 2326</summary>
    public partial class CSQueryLatestVersionReq
    {
        public CSQueryLatestVersionReq()
        {
            Clear();
        }
        /// <summary>游戏名称</summary>
        public string gameName { get; set; }

        /// <summary>操作系统类型(打包用) ,绑定cs_define_enum.EnmOSType</summary>
        public string mobilePhoneType { get; set; }

        /// <summary>渠道类型,待定</summary>
        public string channelType { get; set; }

        /// <summary>版本号</summary>
        public string versionNo { get; set; }


        public void Clear()
        {
            gameName = "";
            mobilePhoneType = "";
            channelType = "";
            versionNo = "";
        }
    }

    /// <summary>CS_QUERY_LATEST_VERSION_RES = 2327</summary>
    public partial class CSQueryLatestVersionRes
    {
        public CSQueryLatestVersionRes()
        {
            patchInfoList = new List<global::cs.PatchInfo>();
            InitAllCacheList();
            Clear();
        }
        /// <summary>a cache list for patchInfoList</summary>
        public List<global::cs.PatchInfo> patchInfoListCacheList = new List<global::cs.PatchInfo>(50);

        public int RetCode { get; set; }

        /// <summary>包类型，无需更新(0),渠道包(1),patch包(2)</summary>
        public int packageType { get; set; }

        /// <summary>渠道包下载地址</summary>
        public string channelUrl { get; set; }

        /// <summary>Patch包相关信息</summary>
        public List<global::cs.PatchInfo> patchInfoList { get; set; }


        public void Clear()
        {
            RetCode = 0;
            packageType = 0;
            channelUrl = "";
            if (patchInfoList != null)
            {
                for (int i = 0; i < patchInfoList.Count;  ++i)
                {
                    patchInfoList[i].Clear();
                    ReturnpatchInfoListElement(patchInfoList[i]);
                }
                patchInfoList.Clear();
            }
        }

        /// <summary>init all the cache lists</summary>
        public void InitAllCacheList()
        {
            patchInfoListCacheList.Clear();
            for (int i = 0; i < 50; ++i)
            {
                patchInfoListCacheList.Add(new global::cs.PatchInfo());
            }
        }

        /// <summary>get a free element from patchInfoListCacheList</summary>
        public global::cs.PatchInfo GetFreepatchInfoListElement()
        {
            global::cs.PatchInfo ret = null;
            if (patchInfoListCacheList.Count > 0)
            {
                 ret = patchInfoListCacheList[0];
                patchInfoListCacheList.RemoveAt(0);
            }
            else
            {
                 ret = new global::cs.PatchInfo();
            }
            return ret;
        }

        /// <summary>return a free element to patchInfoListCacheList</summary>
        public void ReturnpatchInfoListElement(global::cs.PatchInfo element)
        {
            bool alreadyInList = false;
            for (int i = 0; i < patchInfoListCacheList.Count;  ++i)
            {
                if (patchInfoListCacheList[i] == element)
                {
                    alreadyInList = true;
                    break;
                }
            }
            if (!alreadyInList)
            {
                element.Clear();
                patchInfoListCacheList.Add(element);
            }
        }
    }

    /// <summary>客户端版本更新上报 CS_CLIENT_VERSION_UPTATE_REPORT = 2328</summary>
    public partial class CSClientVersionUptateReport
    {
        public CSClientVersionUptateReport()
        {
            Clear();
        }
        /// <summary>当前客户端的版本号</summary>
        public string curClientVersion { get; set; }


        public void Clear()
        {
            curClientVersion = "";
        }
    }

    public partial class PatchInfo
    {
        public PatchInfo()
        {
            Clear();
        }
        /// <summary>patch包版本号</summary>
        public string patchNo { get; set; }

        /// <summary>patch包下载地址</summary>
        public string patchURL { get; set; }

        /// <summary>patch包大小</summary>
        public uint patchSIZE { get; set; }

        /// <summary>patch包MD5值</summary>
        public string patchMD5 { get; set; }


        public void Clear()
        {
            patchNo = "";
            patchURL = "";
            patchSIZE = 0;
            patchMD5 = "";
        }
    }

}
