//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LogicBaseLuaWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LogicBaseLua), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("RefreshPanelDepth", RefreshPanelDepth);
		L.RegFunction("InitPanelRenderQueue", InitPanelRenderQueue);
		L.RegFunction("RefreshLuaSetting", RefreshLuaSetting);
		L.RegFunction("DestroyAll", DestroyAll);
		L.RegFunction("FastHide", FastHide);
		L.RegFunction("FastShow", FastShow);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("fullLuaFileName", get_fullLuaFileName, set_fullLuaFileName);
		L.RegVar("ID", get_ID, set_ID);
		L.RegVar("isOldUnique", get_isOldUnique, set_isOldUnique);
		L.RegVar("current", get_current, set_current);
		L.RegVar("beKeepDepthValue", get_beKeepDepthValue, set_beKeepDepthValue);
		L.RegVar("HasLogicBaseLuaParent", get_HasLogicBaseLuaParent, set_HasLogicBaseLuaParent);
		L.RegVar("IsFastHide", get_IsFastHide, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshPanelDepth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LogicBaseLua obj = (LogicBaseLua)ToLua.CheckObject(L, 1, typeof(LogicBaseLua));
			obj.RefreshPanelDepth();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitPanelRenderQueue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LogicBaseLua obj = (LogicBaseLua)ToLua.CheckObject(L, 1, typeof(LogicBaseLua));
			obj.InitPanelRenderQueue();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RefreshLuaSetting(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LogicBaseLua obj = (LogicBaseLua)ToLua.CheckObject(L, 1, typeof(LogicBaseLua));
			obj.RefreshLuaSetting();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			LogicBaseLua.DestroyAll();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FastHide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LogicBaseLua obj = (LogicBaseLua)ToLua.CheckObject(L, 1, typeof(LogicBaseLua));
			obj.FastHide();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FastShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LogicBaseLua obj = (LogicBaseLua)ToLua.CheckObject(L, 1, typeof(LogicBaseLua));
			obj.FastShow();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fullLuaFileName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			string ret = obj.fullLuaFileName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fullLuaFileName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			int ret = obj.ID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isOldUnique(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			bool ret = obj.isOldUnique;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isOldUnique on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_current(IntPtr L)
	{
		try
		{
			ToLua.Push(L, LogicBaseLua.current);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_beKeepDepthValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			bool ret = obj.beKeepDepthValue;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index beKeepDepthValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasLogicBaseLuaParent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			bool ret = obj.HasLogicBaseLuaParent;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HasLogicBaseLuaParent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsFastHide(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			bool ret = obj.IsFastHide;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsFastHide on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fullLuaFileName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.fullLuaFileName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index fullLuaFileName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isOldUnique(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isOldUnique = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isOldUnique on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_current(IntPtr L)
	{
		try
		{
			LogicBaseLua arg0 = (LogicBaseLua)ToLua.CheckUnityObject(L, 2, typeof(LogicBaseLua));
			LogicBaseLua.current = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_beKeepDepthValue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.beKeepDepthValue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index beKeepDepthValue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HasLogicBaseLuaParent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LogicBaseLua obj = (LogicBaseLua)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.HasLogicBaseLuaParent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HasLogicBaseLuaParent on a nil value" : e.Message);
		}
	}
}

