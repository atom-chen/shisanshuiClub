-- from struct ENVIRONMENT
-- c++
local env = {
    byChair = 0, -- 检查谁的
    byTurn = 0, -- 轮到谁，如果是点炮，则是点炮的那个人
    tHand = {
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    }, -- 全部手牌
    byHandCount = {
        17,17,17,17
    }, -- 手牌数
    tSet = {
        {{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}},
        {{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}},
        {{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}},
        {{0,0,0}, {0,0,0}, {0,0,0}, {0,0,0}},
    }, -- 四家，4手牌？福州17张   轮到谁，如果是点炮，则是点炮的那个人      ucFlag,card,value
    bySetCount = {
        0,0,0,0
    }, -- set有几手牌
    tGive = {
        {
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
        },
        {
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
        },
        {
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
        },
        {
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
            0,0,0,0,0, 0,0,0,0,0,
        },
    }, -- 四家出过的牌
    byGiveCount = {
        0,0,0,0
    }, -- 每人出了几张牌
    tLast = 0, --  最后和的那张牌
    byFlag = 0, -- 0自摸、1点炮、2杠上花、3抢杠
    byRoundWind = 0, -- 圈风
    byPlayerWind = 0, -- 门风
    byTilesLeft = 0; -- 还剩多少张牌，用来计算海底等
    byFlowerCount = {
        0,0,0,0
    }, -- 4家各有多少张花
    byTing = {
        0,0,0,0
    }, -- 听牌的玩家
    byDoFirstGive =  {
        0,0,0,0
    }, -- 4家是否出过牌(这个主要用来判断地胡)

    byRecv = {
        0,0,0,0,0,0
    }, -- 和牌前别人出过的牌

    byLaiziCards = {
        0,0,0,0
    }, -- 癞子牌数组，暂定最大是4个

    nNSNum = {
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,0
    }, -- 剩余各个牌的数目

    byMaxHandCardLength = 17, --手牌最大的数量

    byDoCheck = {
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0,
        0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 0
    }, --需要计算的番型

    byEnvFan = {}, --番型数据:{"byFanNumber"=1,"byFanType"=2,"byNoCheck"={1,2,3...}}
    checkWinParam = {},	--check win 中一些必要的参数

    byQYSNoWord = 0, --清一色是否包含字一色
    nMissHu = 0, --缺一门标志
    nMissWind = 0, --缺一门可以有风牌
    byDealer = 0, -- 庄家
    gamestyle = 0, -- 游戏类型

    laizi = 0, -- 癞子数量，或金数量
    flower = 0, -- 花数量

    byGangTimes = 0, --杠上花时，杠的次数
    byHaiDi = 0, --是否是海底(荒局前最后一张，用来判断海底捞月和海底炮)

    byGodTingFlag = 0, --天听标志
    byGroundTingFlag = 0, --地听标志
    byXiaoSaTingFlag = 0, -- 潇洒标志
    --bDanDiaoHu = 0, -- 单吊胡
    byHunYouFlag = 0, --混悠标志

    KeLimit = 0, -- 刻子limit
    byHaveWinds = 0, --牌池不一样的牌的总数，一般是27，31，34
    --bkaAdd = 0, --卡张胡
    --n258Jiang = 0, --258标志
}

--check win 中一些必要的参数
local checkWinParam = {
    byCheck7pairs = 0,    --检查7小对：0不检查 1癞子做普通牌 2癞子可替任何牌
    byCheck8Pairs =0,	--检查8小对：0不检查 1癞子做普通牌 2癞子可替任何牌
    byCheckShiSanYao = 0, --检查十三幺：0不检查 1癞子做普通牌 2癞子可替任何牌
    byLaiziWinNums = 0, --N张癞子牌可胡 0不检查
    byShiSanBuKao = 0, --十三不靠: 0不检查 1检查

    byQiXingBuKao = 0, --七星不靠: 0不检查 1检查

    by258Jiang = 0, --258将: 0不检查, 1癞子做普通牌 2癞子可替任何牌
    byWindPu = 0, --风扑: 0不检查
    byJiangPu = 0, --将扑: 0不检查
    byYaoJiuPu = 0, --幺九扑: 0不检查

    byShunZFB = 0, --中发白是顺子: 0不检查 1癞子做普通牌 2癞子可替任何牌
    byShunWind = 0, --[[--东南西北是顺子:
                             0不检查
                             1任意三张组合成顺子(癞子不可替换),
                             2按顺序组合成顺子(癞子不可替换),
                             3任意三张组合成顺子(癞子可替换),
                             4按顺序组合成顺子(癞子可替换)]]
    byBKDHu = 0, --胡牌必须是边卡吊:0不检查，1

    byBaiChangeGoldUse = 0, --白板当金本身使用(白板充当做癞子的那张牌)
    byMaxHandCardLength = 17, --手牌最大的数量
    nGameStyle = 0, --游戏类型

    nEightFlowerHu = 0, --八张花是否可胡牌,0:否，1是
    byKaiMenLimit = 0, --开门限制，0没有，1没有吃碰杠不能胡
    byColorLimit = 0, --胡牌需要花色限制 0没有，1缺一门胡可带风牌，3种花色齐
    byQYSHu = 0, --有花色限制时，是否可以胡清一色，0不可以，1可以
    byYaoJiuLimit = 0, --幺九限制，0没有，1有
    byDanDiaoLimit = 0,	--手把一，单吊胡牌仅允许飘胡牌型，即有“吃”就不允许单吊胡牌，0无，1 有

    nNSNum = {},

    byOneGoldLimit = 0, --单金不能点炮胡
    byTwoGoldLimit = 0,	--双金以上必须游金胡
}
env.checkWinParam = checkWinParam

--return clone(env)
return env